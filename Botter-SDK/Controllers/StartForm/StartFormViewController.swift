//
//  StartFormViewController.swift
//  Botter
//
//  Created by Nora on 7/15/20.
//  Copyright (c) 2020 BlueCrunch. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class b_StartFormViewController: b_StartConversationViewController {
    
    // MARK: - Public properties -
    var faqsList = [b_FaqData]()
    @IBOutlet weak var tableView : UITableView!
    @IBOutlet weak var continueSessionView : b_AllSidsCardView!
    @IBOutlet weak var searchBox : SearchBox!
    @IBOutlet weak var oldConvName : b_BasicMediumLbl!
    @IBOutlet weak var oldConvText : b_BasicMediumLbl!
    @IBOutlet weak var logoImage : UIImageView!
    
    var presenter: StartFormPresenterInterface!
    
    var loader = b_LoaderManager()
    
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
//        if ChatSessionManager.shared.hasActiveSession(){
//            updateHeaderHeight(height: 420)
//            continueSessionView.isHidden = false
//            oldConvName.text = BotterSettingsManager.ChatTitleText
//            oldConvText.text = ChatSessionManager.shared.getActiveSessionMsg()
//            logoImage.tintColor = BotterSettingsManager.FontColor
//            logoImage.image = BotterSettingsManager.logo
//            let logo : UIImage = UIImage(named: "botterIcon", in: MyFrameworkBundle.bundle , compatibleWith: nil)!
//
//            if BotterSettingsManager.logo == logo{
//                self.logoImage.contentMode = .center
//            }else{
//                self.logoImage.contentMode = .scaleAspectFit
//            }
//        }else{
//            updateHeaderHeight(height: 268)
//            continueSessionView.isHidden = true
//        }
        
        
        presenter.loadForms()
        searchBox.cParent = self
        searchBox.isHidden = !BotterSettingsManager.hasFAQs
        if !BotterSettingsManager.hasFAQs{
            updateFooterHeight(height: 140)
        }
        
        if #available(iOS 13.0, *) {
            overrideUserInterfaceStyle = .light
        } else {
            // Fallback on earlier versions
        }
    }
    
   
    
   @IBAction func continueConversationClicked(){
       CommonActions.openChat(parent: self, data: b_BotData())
   }
    
    override func newConversationClicked() {
        ChatSessionManager.shared.setActiveSessionMessage(msg: nil)
        self.presenter.validateThenSubmitForm()
    }
    
    
    
}

// MARK: - Extensions -

extension b_StartFormViewController: StartFormViewInterface {
    
    func setFaqsData(faqsData: [b_FaqData]) {
        searchBox.setFaqsData(faqsData: faqsData)
    }
    
    func updateFooterHeight(height : Int){
        
        tableView.tableFooterView?.frame.size = CGSize(width: tableView.frame.width, height: CGFloat(height))
        tableView.reloadData()
    }
    
    func updateHeaderHeight(height : Int){
        
        tableView.tableHeaderView?.frame.size = CGSize(width: tableView.frame.width, height: CGFloat(height))
        tableView.reloadData()
    }
    
    func showMsg(msg: String) {
        self.b_showMessage(msg)
    }
    
    func showLoader() {
        self.loader.show(inRect: self.view.frame, inView: self.view)
    }
    
    func hideLoader() {
        self.loader.remove()
    }
    
    func reload() {
        self.tableView.reloadData()
    }
}

extension b_StartFormViewController : UITableViewDataSource , UITableViewDelegate{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.presenter.dataCells.count == 0 ? 1 : self.presenter.dataCells.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if self.presenter.dataCells.count == 0 {
            let header = tableView.dequeueReusableCell(withIdentifier: "HeaderTableViewCell") as? HeaderTableViewCell
            header!.action = {
                self.continueConversationClicked()
            }
            
            return header ?? UITableViewCell()
        }
        return self.presenter.dataCells[indexPath.row]
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if let cell = self.presenter.dataCells[indexPath.row] as? CustomActionTableViewCell{
            
            cell.action.action()
        }
    }
    
}
